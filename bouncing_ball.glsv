#ifdef GL_ES
precision mediump float;
#endif

uniform vec2 u_resolution;
uniform float u_time;

float box(in vec2 _st, in vec2 _size){
    _size = vec2(0.5) - _size*0.5;
    vec2 uv = smoothstep(_size,
                        _size+vec2(0.001),
                        _st);
    uv *= smoothstep(_size,
                    _size+vec2(0.001),
                    vec2(1.0)-_st);
    return uv.x*uv.y;
}

float cross(in vec2 _st, float _size){
    return  box(_st, vec2(_size,_size/4.)) +
            box(_st, vec2(_size/4.,_size));
}

float circle(in vec2 _st, float size){
    return 1.-smoothstep(size/2., size/2.+0.01, distance(vec2(0.5), _st));
}

mat2 rotate2d(float _angle){
    return mat2(cos(_angle),-sin(_angle),
                sin(_angle),cos(_angle));
}

void main(){
    vec2 st = gl_FragCoord.xy/u_resolution.xy;
    vec3 color = vec3(0.0);

    vec2 translate = vec2(sin(u_time*0.5)*1.1, 1.-abs(cos(u_time* 3.14)) ); 
    
    st -= vec2(0.5);
    mat2 rotation = rotate2d( abs(cos(u_time/3.))*3.14 - 1.5 );
    st =  rotation * st;
    st += vec2(0.5);
    
    st += rotation * translate*0.35 ;

    color += vec3(circle(st,0.25)) * vec3(abs(cos(st.y*2.5)),0.2,0.6);
    
    if(color == vec3(0.))
        color = vec3(0.7,0.2,0.8) * abs(sin(u_time*3.14/10.))*0.5 + vec3(0.2, 0., 0.5);

    gl_FragColor = vec4(color,1.0);
}
